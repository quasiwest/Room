spring:
  datasource:
    url: ${DB_URL}?serverTimezone=UTC&useUnicode=true&characterEncoding=utf8
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
    driver-class-name: org.mariadb.jdbc.Driver
    hikari:
      connection-timeout: 3000
      validation-timeout: 3000
      minimum-idle: 2
      max-lifetime: 240000
      maximum-pool-size: 2

  jpa:
    database-platform: org.hibernate.dialect.MariaDBDialect
    hibernate:
      ddl-auto: create-drop
    properties:
      hibernate:
        format_sql: true

  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${GOOGLE_CLIENT_ID}
            client-secret: ${GOOGLE_CLIENT_SECRET}
            scope:
              - profile
              - email
          kakao:
            client-id: ${KAKAO_CLIENT_ID}
            client-secret: ${KAKAO_CLIENT_SECRET}
            client-authentication-method: client_secret_post
            authorization-grant-type: authorization_code
            scope:
              - profile_image
              - account_email
              - name
            redirect-uri: "{baseUrl}/{action}/oauth2/code/{registrationId}"

        provider:
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-info-authentication-method: header
            user-name-attribute: id

  # 업로드 용량 설정
  servlet:
    multipart:
      max-file-size: 100MB
      max-request-size: 100MB

# AWS S3 기본 설정
cloud:
  aws:
    stack:
      auto: false
    region:
      static: ap-northeast-2
    credentials:
      accessKey: ${S3_ACCESSKEY}
      secretKey: ${S3_SECRETKEY}
    s3:
      bucket: ${S3_NAME}

jwt:
  secret: ${JWT_SECRET}

redis:
  host: ${EC2_PUBLIC_IP}
  port: 6379
  password: ${REDIS_PW}

# OpenVidu 설정
openvidu:
  url: ${OPENVIDU_URL}
  secret: ${OPENVIDU_SECRET}

